<?php

/**
 * @file
 * Contains service_club_event_modal.module.
 */

use Drupal\Component\Serialization\Json;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\service_club_event\Entity\EventInformation;

/**
 * Implements hook_help().
 */
function service_club_event_modal_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the service_club_event_modal module.
    case 'help.page.service_club_event_modal':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The module to handle to the modal to connect the event to the TMP') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function service_club_event_modal_theme() {
  return [
    'service_club_event_modal' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * @param array $build
 * @param \Drupal\service_club_event\Entity\EventInformation $entity
 * @param \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display
 * @param $view_mode
 *
 * This function adds the button to the event information page.
 * This function also embeds the parameters that the angular app needs (jwt, event id, site url).
 * The name of this function must be in the form:
 * "module_name"_"entity_name"_"hook_name"
 * For example "module_name" = service_club_event_modal
 *              "entity_name" = event_information
 *              "hook_name" = view
 */
function service_club_event_modal_event_information_view( array &$build, EventInformation $entity, EntityViewDisplayInterface $display, $view_mode) {
  // The ID of the event.
  $eventId = $entity->id();

  // Hooks into the route (specified in the routing file), breaks if you change the entityId mapping.
  $linkUrl = Url::fromRoute('event_modal.modal', array('entityid' => 'top left corner of pop-up'));

  // Sets the options of the button to be displayed.
  $linkUrl->setOptions([
    'attributes' => [
      'class' => ['use-ajax', 'button', 'button--small'],
      'data-dialog-type' => 'modal',
      'data-dialog-options' => Json::encode(['width' => 800]),
    ],
  ]);

  // Adds the button to the build object so that it is rendered on the page.
  $build['modal_button'] = [
    '#type' => 'markup',
    '#markup' => Link::fromTextAndUrl(t('Open TMP Tool'), $linkUrl)
      ->toString(),
    '#attached' => [
      'library' => [
        'core/drupal.dialog.ajax',
      ],
    ],
  ];

  // Load the jwtAuth service and generate a token.
  // Make sure your website has a key set in the JWT admin page.
  $jwtAuth = \Drupal::service('jwt.authentication.jwt');
  $jwtKey = $jwtAuth->generateToken();
  // Gets the baseUrl of the site.
  $baseUrl = \Drupal::request()->getHost();

  // Embeds the data needed by the angular app into the page for it to access later.
  $build['#attached']['drupalSettings']['app_data']['jwtkey'] = $jwtKey;
  $build['#attached']['drupalSettings']['app_data']['eventid'] = $eventId;
  $build['#attached']['drupalSettings']['app_data']['baseurl'] = $baseUrl;
}
